
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ17


# –£—Å–ª–æ–≤–∏–µ:
# –í —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
# –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ü–µ–ª—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 1 –¥–æ 100 000 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —á–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞
# –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫—Ä–∞—Ç–Ω—ã–π 21.
# –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –µ—Å—Ç—å.
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä, –∑–∞—Ç–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∏–∑ —Å—É–º–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–∫–∏—Ö –ø–∞—Ä.
# –í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –ø–æ–¥ –ø–∞—Ä–æ–π –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è –¥–≤–∞ –∏–¥—É—â–∏—Ö –ø–æ–¥—Ä—è–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.


# –†–µ—à–µ–Ω–∏–µ:
'''
count = 0
maxi = 0

M = [int(i) for i in open('17_45251.txt')]
is_divisible_twenty_one = [int(i) for i in M if i % 21 == 0]

for i in range(0, len(M) - 1):
    if (M[i] % min(is_divisible_twenty_one) == 0) or
	     (M[i + 1] % min(is_divisible_twenty_one) == 0):
        count += 1
        maxi = max(maxi, (M[i] + M[i + 1]))

print(count, maxi)
'''


# –£—Å–ª–æ–≤–∏–µ:
# –í —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.
# –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ü–µ–ª—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç ‚Äî100 000 –¥–æ 100 000 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–æ–µ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ —Ç—Ä—ë—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 3,
# –∞ —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç—Ä–æ–π–∫–∏ –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —è–≤–ª—è—é—â–µ–≥–æ—Å—è –ø—è—Ç–∏–∑–Ω–∞—á–Ω—ã–º —á–∏—Å–ª–æ–º,
# –∫–æ—Ç–æ—Ä–æ–µ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 3.
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–æ–µ–∫ —á–∏—Å–µ–ª,
# –∑–∞—Ç–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∏–∑ —Å—É–º–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–∫–∏—Ö —Ç—Ä–æ–µ–∫.
# –í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –ø–æ–¥ —Ç—Ä–æ–π–∫–æ–π –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è —Ç—Ä–∏ –∏–¥—É—â–∏—Ö –ø–æ–¥—Ä—è–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.


# –†–µ—à–µ–Ω–∏–µ:
'''
count = 0
maxi = 0

M = [int(i) for i in open('17_12249.txt')]
last_is_three = [i for i in M if str(i)[-1] == '3']
last_is_three_with_len_five = [i for i in last_is_three if len(str(i)) == 5]

for i in range(0, len(M) - 2):
    if (M[i] in last_is_three) or (M[i + 1] in last_is_three) or (M[i + 2] in last_is_three):
        summ = (M[i] + M[i + 1] + M[i + 2])
        if summ <= max(last_is_three_with_len_five):
            count += 1
            maxi = max(maxi, summ)

print(count, maxi)
'''


# –£—Å–ª–æ–≤–∏–µ:
# –í —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—ã—Ö –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–∏—Ö 10000.
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ª–∏–±–æ —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—Ä–∞—Ç–Ω–∞ 18,
# –ª–∏–±–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—Ä–∞—Ç–Ω–æ 18.
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞: —Å–Ω–∞—á–∞–ª–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä, –∑–∞—Ç–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–∏—Ö –ø–∞—Ä.
# –í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –ø–æ–¥ –ø–∞—Ä–æ–π –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è –¥–≤–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.


# –†–µ—à–µ–Ω–∏–µ:
'''
count = 0
maxi = 0

M = [int(i) for i in open('17_7718.txt')]

for i in range(0, len(M)):
    for j in range(i + 1, len(M)):
        if ((M[i] + M[j]) % 18 == 0 and (M[i] * M[j]) % 18 != 0) or \\
           ((M[i] + M[j]) % 18 != 0 and (M[i] * M[j]) % 18 == 0):
            count += 1
            maxi = max(maxi, (M[i] + M[j]))

print(count, maxi)
'''


# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìò –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 2491 #kege –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/403
# üìô –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 61363 #reshu –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/332
# üìò –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 6059 #kege –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/222
# üí° –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤ (—Å–ø–∏—Å–æ—á–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è) –¥–ª—è –ï–ì–≠: https://t.me/informatika_kege_itpy/339
# üí° –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ Python: https://t.me/informatika_kege_itpy/286
# üêç –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å .txt —Ñ–∞–π–ª–∞–º–∏ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –Ω–æ–º–µ—Ä–∞—Ö –ï–ì–≠: https://t.me/informatika_kege_itpy/400
# üêç –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞–º —Å–ø–∏—Å–∫–æ–≤: https://t.me/informatika_kege_itpy/495


# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)


# todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 50.')
print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 50))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')
