
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ8


# –£—Å–ª–æ–≤–∏–µ:
# –í—Å–µ —à–µ—Å—Ç–∏–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã –ê, –ï, –ö, –ù, –° –∑–∞–ø–∏—Å–∞–Ω—ã
# –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã –Ω–∞—á–∏–Ω–∞—è —Å 1.
# –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞.
#
# –ê–ê–ê–ê–ê–ê
# –ê–ê–ê–ê–ê–ï
# –ê–ê–ê–ê–ê–ö
# –ê–ê–ê–ê–ê–ù
# –ê–ê–ê–ê–ê–°
# –ê–ê–ê–ê–ï–ê
# –ü–æ–¥ –∫–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –≤ —Å–ø–∏—Å–∫–µ –∏–¥—ë—Ç —Å–ª–æ–≤–æ –°–ï–ù–ï–ö–ê?


# –†–µ—à–µ–Ω–∏–µ (—á–µ—Ä–µ–∑ itertools):
'''
import itertools
count = 0
for s in itertools.product('–ê–ï–ö–ù–°', repeat=6):
    slovo = ''.join(s)
    count += 1
    if slovo == '–°–ï–ù–ï–ö–ê':
        print(count)
'''


# –†–µ—à–µ–Ω–∏–µ (—á–µ—Ä–µ–∑ —Ü–∏–∫–ª for):
'''
s = '–ê–ï–ö–ù–°'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    for f in s:
                        slovo = a + b + c + d + e + f
                        count += 1
                        if slovo == '–°–ï–ù–ï–ö–ê':
                            print(count)
'''


# –£—Å–ª–æ–≤–∏–µ:
# –Ø—Ä–æ—Å–ª–∞–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–¥—ã –∏–∑ –±—É–∫–≤, –≤—Ö–æ–¥—è—â–∏—Ö –≤ —Å–ª–æ–≤–æ –Ø–†–û–°–õ–ê–í.
# –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –±—É–∫–≤,
# –±—É–∫–≤—ã –≤ –∫–æ–¥–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è, —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –≤ –∫–æ–¥–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –≥–ª–∞—Å–Ω—ã—Ö,
# –¥–≤–µ –≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å —Ä—è–¥–æ–º.
# –°–∫–æ–ª—å–∫–æ –∫–æ–¥–æ–≤ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –Ø—Ä–æ—Å–ª–∞–≤?


# –†–µ—à–µ–Ω–∏–µ (—á–µ—Ä–µ–∑ itertools):
'''
import itertools
count = 0
for s in itertools.permutations('–Ø–†–û–°–õ–ê–í', 5):
    slovo = ''.join(s)
    glas = [i for i in slovo if i in '–Ø–û–ê']
    sogl = [i for i in slovo if i in '–†–°–õ–í']
    if len(sogl) > len(glas):
        if all(x not in slovo for x in '–Ø–ê –ê–Ø –ê–û –û–ê –Ø–û –û–Ø'.split()):
            count += 1
print(count)
'''


# –†–µ—à–µ–Ω–∏–µ (—á–µ—Ä–µ–∑ —Ü–∏–∫–ª for):
'''
s = '–Ø–†–û–°–õ–ê–í'
count = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    if len(set(slovo)) == 5:
                        glas = [i for i in slovo if i in '–Ø–û–ê']
                        sogl = [i for i in slovo if i in '–†–°–õ–í']
                        if len(sogl) > len(glas):
                            if all(x not in slovo for x in '–Ø–ê –ê–Ø –ê–û –û–ê –Ø–û –û–Ø'.split()):
                                count += 1
print(count)
'''


# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìô –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 15947 #reshu –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/473
# üìó –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 4199 #polyakov –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/475
# üìò –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 12917 #kege –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/477
# üìï –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ –∏–∑ –Ω–æ–≤–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ #statgrad –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/484
# üí° –§—É–Ω–∫—Ü–∏–∏ split() –∏ join(), –≥–¥–µ –æ–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ö–ï–ì–≠: https://t.me/informatika_kege_itpy/126
# üí° –§—É–Ω–∫—Ü–∏–∏ all() –∏ any(), –≥–¥–µ –æ–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ï–ì–≠: https://t.me/informatika_kege_itpy/378
# üêç –§—É–Ω–∫—Ü–∏—è permutations() –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ itertools –≤ Python: https://t.me/informatika_kege_itpy/391
# üêç –§—É–Ω–∫—Ü–∏—è product –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ itertools –≤ Python: https://t.me/informatika_kege_itpy/393
# üêç –í—Å–ø–æ–º–Ω–∏–º –ø–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ itertools: https://t.me/informatika_kege_itpy/470


# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)


# todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 50.')
print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 50))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')
