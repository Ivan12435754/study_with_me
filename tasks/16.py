
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ16


# –£—Å–ª–æ–≤–∏–µ:
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n) –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
# (F(n) = 3) –ø—Ä–∏ (n ‚â§ 3)
# (F(n) = F(n // 2) + 5) –ø—Ä–∏ —á–µ—Ç–Ω—ã—Ö (n > 3)
# (F(n) = F(n - 1) - F(n - 2)) –ø—Ä–∏ –Ω–µ—á–µ—Ç–Ω—ã—Ö (n > 3)
#
# –ó–¥–µ—Å—å ¬´//¬ª –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –¥–µ–ª–µ–Ω–∏–µ –Ω–∞—Ü–µ–ª–æ.
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ F(20).


# –†–µ—à–µ–Ω–∏–µ:
'''
def F(n):
    if n <= 3:
        return 3
    if n % 2 == 0 and n > 3:
        return F(n // 2) + 5
    if n % 2 != 0 and n > 3:
        return F(n - 1) - F(n - 2)

print(F(20))
'''


# –£—Å–ª–æ–≤–∏–µ:
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n), –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
# F(n) = 2 –ø—Ä–∏ n < 3;
# F(n) = 2 √ó F(n ‚àí 2) ‚àí F(n ‚àí 1) + 2, –µ—Å–ª–∏ n > 2 –∏ –ø—Ä–∏ —ç—Ç–æ–º n —á—ë—Ç–Ω–æ;
# F(n) = 2 √ó F(n ‚àí 1) + F(n ‚àí 2) ‚àí 2, –µ—Å–ª–∏ n > 2 –∏ –ø—Ä–∏ —ç—Ç–æ–º n –Ω–µ—á—ë—Ç–Ω–æ.
#
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ F(170)?


# –†–µ—à–µ–Ω–∏–µ (—É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É functools):
'''
from functools import *

@lru_cache(None)
def F(n):
    if n < 3:
        return 2
    if n > 2 and n % 2 == 0:
        return 2 * F(n - 2) - F(n - 1) + 2
    if n > 2 and n % 2 != 0:
        return 2 * F(n - 1) + F(n - 2) - 2

print(F(170))
'''


# –£—Å–ª–æ–≤–∏–µ:
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n), –≥–¥–µ n ‚Äì –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
#
# F(n) = 1, –ø—Ä–∏ n ‚â§ 7,
# F(n) = n + 2 + F(n ‚àí 1), –µ—Å–ª–∏ n > 7
#
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è F(2024)‚àíF(2020)?


# –†–µ—à–µ–Ω–∏–µ (–æ–±—Ö–æ–¥ –ø—Ä–µ–¥–µ–ª–∞ —Ä–µ–∫—É—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É sys)
'''
from sys import *

setrecursionlimit(10000)

def F(n):
    if n <= 7:
        return 1
    else:
        return n + 2 + F(n - 1)

print(F(2024) - F(2020))
'''


# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìò –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 8426 #kege –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/236
# üìò –†–∞–∑–±–æ—Ä –Ω–æ–º–µ—Ä–∞ 10099 #kege –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/240
# üí° –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é @lru_cache(): https://t.me/informatika_kege_itpy/389


# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)


# todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 50.')
print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 50))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')