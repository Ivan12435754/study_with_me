
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ15

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1:
# –û–±–æ–∑–Ω–∞—á–∏–º —á–µ—Ä–µ–∑ –î–ï–õ(n, m) —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ¬´–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n –¥–µ–ª–∏—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ m¬ª.
# –î–ª—è –∫–∞–∫–æ–≥–æ –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ê —Ñ–æ—Ä–º—É–ª–∞ (–î–ï–õ(x,2) ‚Üí ¬¨–î–ï–õ(x,13)) ‚à® (x + A ‚â• 1000)
# —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å—Ç–∏–Ω–Ω–∞ (—Ç.–µ. –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 1) –ø—Ä–∏ –ª—é–±–æ–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö?

# –†–µ—à–µ–Ω–∏–µ:
'''
def F(x, A):
    return (x % 2 == 0) <= (x % 13 != 0) or ((x + A) >= 1000)

for A in range(1, 1000):
    if all(F(x, A) for x in range(1, 1000)):
        print(A)
        break
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2:
# –ù–∞ —á–∏—Å–ª–æ–≤–æ–π –ø—Ä—è–º–æ–π –¥–∞–Ω—ã –¥–≤–∞ –æ—Ç—Ä–µ–∑–∫–∞: P = [10, 35] –∏ Q = [17, 48].
# –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–±–æ–ª—å—à—É—é –≤–æ–∑–º–æ–∂–Ω—É—é –¥–ª–∏–Ω—É –æ—Ç—Ä–µ–∑–∫–∞ A, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ñ–æ—Ä–º—É–ª–∞
# ((x –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç A) ‚Üí ¬¨(x –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç P)) ‚Üí ((x –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç A) ‚Üí (x –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç Q))
# —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å—Ç–∏–Ω–Ω–∞, —Ç–æ –µ—Å—Ç—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 1 –ø—Ä–∏ –ª—é–±–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö.

# –†–µ—à–µ–Ω–∏–µ:
'''
def F(x):
    P = 10 <= x <= 35
    Q = 17 <= x <= 48
    A = a1 <= x <= a2
    return (A <= (not P)) <= (A <= Q)

M = [i / 4 for i in range(1 * 4, 60 * 4)]
R = []
for a1 in M:
    for a2 in M:
        if all(F(x) for x in M):
            R.append(a2 - a1)
print(max(R))
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3:
# –û–±–æ–∑–Ω–∞—á–∏–º —á–µ—Ä–µ–∑ m&n –ø–æ—Ä–∞–∑—Ä—è–¥–Ω—É—é –∫–æ–Ω—ä—é–Ω–∫—Ü–∏—é –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª m –∏ n.
# –î–ª—è –∫–∞–∫–æ–≥–æ –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ –ê —Ñ–æ—Ä–º—É–ª–∞ x&25 != 0 ‚Üí (x&17 = 0 ‚Üí x&–ê != 0)
# —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏—Å—Ç–∏–Ω–Ω–∞ (—Ç.–µ. –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 1 –ø—Ä–∏ –ª—é–±–æ–º –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–º —Ü–µ–ª–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö)?

# –†–µ—à–µ–Ω–∏–µ:
'''
def F(x):
    return (x & 25 != 0) <= ((x & 17 == 0) <= (x & A != 0))

for A in range(0, 1000):
    if all(F(x) for x in range(0, 1000)):
        print(A)
        break
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4:
# –ü—Ä–∏ –∫–∞–∫–æ–º –Ω–∞–∏–±–æ–ª—å—à–µ–º —Ü–µ–ª–æ–º A –Ω–∞–π–¥—É—Ç—Å—è —Ç–∞–∫–∏–µ —Ü–µ–ª—ã–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ x –∏ y, —á—Ç–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (3x+y>48)‚à®(x>y)‚à®(4x+y<A)
# –±—É–¥–µ—Ç –ª–æ–∂–Ω—ã–º?

# –†–µ—à–µ–Ω–∏–µ:
'''
def F(x, y, A):
    return ((3 * x) + y > 48) or (x > y) or ((4 * x) + y < A)

R = []
for A in range(0, 100):
    if any(F(x, y, A) == 0 for x in range(0, 100) for y in range(0, 100)):
        R.append(A)
print(max(R))
'''


# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìò –†–∞–∑–±–æ—Ä—ã 15 –Ω–æ–º–µ—Ä–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/360?comment=1550
# üí° –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if, else, elif –∞ —Ç–∞–∫–∂–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã and –∏ or: https://t.me/informatika_kege_itpy/294
# üí° –§—É–Ω–∫—Ü–∏–∏ all() –∏ any(), –≥–¥–µ –æ–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ï–ì–≠: https://t.me/informatika_kege_itpy/378
# üí° –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ set –≤ Python: https://t.me/informatika_kege_itpy/242
# üí° –¶–∏–∫–ª—ã for –∏ while, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã –¥–ª—è —Å–¥–∞—á–∏ –ö–ï–ì–≠: https://t.me/informatika_kege_itpy/169
# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)


# todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 40.')
print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 40))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')